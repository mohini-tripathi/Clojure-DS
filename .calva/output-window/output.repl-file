; This is the Calva evaluation results output window.
; Leave it open, please. Because quirks.
; TIPS: The keyboard shortcut `ctrl+alt+c o` shows and focuses this window.
; Please see https://calva.io/output/ for more info.
; Happy coding! ♥️

; Jacking in...
; Hooking up nREPL sessions...
; Connected session: clj
; TIPS: You can edit the contents here. Use it as a REPL if you like.
;   Use `alt+enter` to evaluate the current top level form.
;   (`ctrl+enter` evaluates the current form.)
;   File URLs in stacktrace frames are peekable and clickable.
; Debugger initialized
clj::user=> 
; Jack-in done.
; Evaluating file: dc.clj
#'learn-clojure.Algorithms.dc/c1
clj::learn-clojure.Algorithms.dc=> 
; Evaluating file: dc.clj
#'learn-clojure.Algorithms.dc/c1
clj::learn-clojure.Algorithms.dc=> 
clj::learn-clojure.Algorithms.dc=> 
; Evaluating file: dc.clj
#'learn-clojure.Algorithms.dc/c1
clj::learn-clojure.Algorithms.dc=> 
; Evaluating file: dc.clj
#learn_clojure.Algorithms.dc.DCImpl{:components (#{1} #{2} #{3} #{4} #{5})}
clj::learn-clojure.Algorithms.dc=> 
; Evaluating file: dc.clj
#learn_clojure.Algorithms.dc.DCImpl{:components (#{1 2} #{3} #{4} #{5})}
clj::learn-clojure.Algorithms.dc=> 
; Evaluating file: dc.clj
#'learn-clojure.Algorithms.dc/c2
clj::learn-clojure.Algorithms.dc=> 
; Evaluating file: dc.clj
#learn_clojure.Algorithms.dc.DCImpl{:components (#{1 2} #{3} #{4} #{5})}
clj::learn-clojure.Algorithms.dc=> 
; Evaluating file: dc.clj
; Syntax error compiling def at (src/learn_clojure/Algorithms/dc.clj:53:1).
; Too many arguments to def
; Evaluation of file dc.clj failed: class clojure.lang.Compiler$CompilerException
[{:file "Compiler.java" :line 7115 :method "analyzeSeq" :flags [:tooling :java]}
 {:file "Compiler.java" :line 6789 :method "analyze" :flags [:tooling :java]}
 {:file "Compiler.java" :line 6745 :method "analyze" :flags [:dup :tooling :java]}
 {:file "Compiler.java" :line 7181 :method "eval" :flags [:tooling :java]}
 {:file "Compiler.java" :line 7636 :method "load" :flags [:tooling :java]}
 {:file "NO_SOURCE_FILE" :line 1 :fn "eval16705"  :method "invokeStatic" :flags [:project :repl :clj]}
 {:file "NO_SOURCE_FILE" :line 1 :fn "eval16705"  :method "invoke" :flags [:dup :project :repl :clj]}
 {:file "Compiler.java" :line 7177 :method "eval" :flags [:tooling :java]}
 {:file "Compiler.java" :line 7132 :method "eval" :flags [:dup :tooling :java]}
 {:file "jar:file:/home/mohini/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj:3214" :fn "eval"  :method "invokeStatic" :flags [:clj]}
 {:file "jar:file:/home/mohini/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj:3210" :fn "eval"  :method "invoke" :flags [:clj]}
 {:file "jar:file:/home/mohini/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/main.clj:437" :fn "repl/read-eval-print/fn"  :method "invoke" :flags [:clj]}
 {:file "jar:file:/home/mohini/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/main.clj:437" :fn "repl/read-eval-print"  :method "invoke" :flags [:dup :clj]}
 {:file "jar:file:/home/mohini/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/main.clj:458" :fn "repl/fn"  :method "invoke" :flags [:clj]}
 {:file "jar:file:/home/mohini/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/main.clj:458" :fn "repl"  :method "invokeStatic" :flags [:dup :clj]}
 {:file "jar:file:/home/mohini/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/main.clj:368" :fn "repl"  :method "doInvoke" :flags [:clj]}
 {:file "RestFn.java" :line 1523 :method "invoke" :flags [:java]}
 {:file "jar:file:/home/mohini/.m2/repository/nrepl/nrepl/0.6.0/nrepl-0.6.0.jar!/nrepl/middleware/interruptible_eval.clj:79" :fn "evaluate"  :method "invokeStatic" :flags [:tooling :clj]}
 {:file "jar:file:/home/mohini/.m2/repository/nrepl/nrepl/0.6.0/nrepl-0.6.0.jar!/nrepl/middleware/interruptible_eval.clj:55" :fn "evaluate"  :method "invoke" :flags [:tooling :clj]}
 {:file "jar:file:/home/mohini/.m2/repository/nrepl/nrepl/0.6.0/nrepl-0.6.0.jar!/nrepl/middleware/interruptible_eval.clj:142" :fn "interruptible-eval/fn/fn"  :method "invoke" :flags [:tooling :clj]}
 {:file "AFn.java" :line 22 :method "run" :flags [:java]}
 {:file "jar:file:/home/mohini/.m2/repository/nrepl/nrepl/0.6.0/nrepl-0.6.0.jar!/nrepl/middleware/session.clj:171" :fn "session-exec/main-loop/fn"  :method "invoke" :flags [:tooling :clj]}
 {:file "jar:file:/home/mohini/.m2/repository/nrepl/nrepl/0.6.0/nrepl-0.6.0.jar!/nrepl/middleware/session.clj:170" :fn "session-exec/main-loop"  :method "invoke" :flags [:tooling :clj]}
 {:file "AFn.java" :line 22 :method "run" :flags [:java]}
 {:file "Thread.java" :line 748 :method "run" :flags [:java]}]
clj::learn-clojure.Algorithms.dc=> 
; Evaluating file: dc.clj
#learn_clojure.Algorithms.dc.DCImpl{:components (#{1 3 2} #{4} #{5})}
clj::learn-clojure.Algorithms.dc=> 
; Evaluating file: dc.clj
#learn_clojure.Algorithms.dc.DCImpl{:components (#{0 5} #{1 2} #{3} #{4})}
clj::learn-clojure.Algorithms.dc=> 
; Evaluating file: dc.clj
#'learn-clojure.Algorithms.dc/c4
clj::learn-clojure.Algorithms.dc=> 
; Evaluating file: dc.clj
#learn_clojure.Algorithms.dc.DCImpl{:components (#{0 1 3 2} #{4} #{5})}
clj::learn-clojure.Algorithms.dc=> 
; Evaluating file: dc.clj
false
clj::learn-clojure.Algorithms.dc=> 
; Evaluating file: dc.clj
true
clj::learn-clojure.Algorithms.dc=> 
